<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.tdd.concert.api.usecase.ValidateTokenIntegrationTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2024-04-18T14:25:01" hostname="Jeongui-MacBookPro.local" time="0.089">
  <properties/>
  <testcase name="유효한 토큰인 경우" classname="com.tdd.concert.api.usecase.ValidateTokenIntegrationTest" time="0.018"/>
  <testcase name="존재하지 않는 토큰인 경우 오류 발생." classname="com.tdd.concert.api.usecase.ValidateTokenIntegrationTest" time="0.015"/>
  <testcase name="만료시각이 지난 토큰의 경우 오류 발생." classname="com.tdd.concert.api.usecase.ValidateTokenIntegrationTest" time="0.029"/>
  <testcase name="예약이 완료되어 만료된 토큰인 경우 오류 발생" classname="com.tdd.concert.api.usecase.ValidateTokenIntegrationTest" time="0.024"/>
  <system-out><![CDATA[2024-04-18T23:25:01.268+09:00  INFO 4019 --- [concert] [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.tdd.concert.api.usecase.ValidateTokenIntegrationTest]: ValidateTokenIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-04-18T23:25:01.270+09:00  INFO 4019 --- [concert] [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.tdd.concert.ConcertApplication for test class com.tdd.concert.api.usecase.ValidateTokenIntegrationTest
Hibernate: insert into user (point,token) values (?,?)
2024-04-18T23:25:01.279+09:00  INFO 4019 --- [concert] [    Test worker] c.t.c.d.token.component.TokenGenerator   : [토큰 생성] UUID 토큰 : a684ecee-e76f-3522-b732-86a895bc8436, 사용자ID : 54
Hibernate: select (coalesce(max(t1_0.wait_no),0)+1) from token t1_0
Hibernate: select coalesce(count(t1_0.progress_status),0) from token t1_0 where t1_0.progress_status=?
2024-04-18T23:25:01.282+09:00  INFO 4019 --- [concert] [    Test worker] c.t.c.d.token.component.TokenReader      : [getCurrentQueueStatus] 예약 진행중인 고객수 : 2
Hibernate: insert into token (created_at,expired_at,progress_status,token,updated_at,user_id,wait_no) values (?,?,?,?,?,?,?)
Hibernate: update user set point=?,token=? where user_id=?
Hibernate: select t1_0.token_id,t1_0.created_at,t1_0.expired_at,t1_0.progress_status,t1_0.token,t1_0.updated_at,t1_0.user_id,t1_0.wait_no from token t1_0 where t1_0.token=?
Hibernate: select u1_0.user_id,u1_0.point,u1_0.token from user u1_0 where u1_0.user_id=?
Hibernate: insert into user (point,token) values (?,?)
2024-04-18T23:25:01.295+09:00  INFO 4019 --- [concert] [    Test worker] c.t.c.d.token.component.TokenGenerator   : [토큰 생성] UUID 토큰 : b53b3a3d-6ab9-3ce0-a682-29151c9bde11, 사용자ID : 55
Hibernate: select (coalesce(max(t1_0.wait_no),0)+1) from token t1_0
Hibernate: select coalesce(count(t1_0.progress_status),0) from token t1_0 where t1_0.progress_status=?
2024-04-18T23:25:01.298+09:00  INFO 4019 --- [concert] [    Test worker] c.t.c.d.token.component.TokenReader      : [getCurrentQueueStatus] 예약 진행중인 고객수 : 3
Hibernate: insert into token (created_at,expired_at,progress_status,token,updated_at,user_id,wait_no) values (?,?,?,?,?,?,?)
Hibernate: update user set point=?,token=? where user_id=?
Hibernate: select t1_0.token_id,t1_0.created_at,t1_0.expired_at,t1_0.progress_status,t1_0.token,t1_0.updated_at,t1_0.user_id,t1_0.wait_no from token t1_0 where t1_0.token=?
Hibernate: insert into user (point,token) values (?,?)
2024-04-18T23:25:01.312+09:00  INFO 4019 --- [concert] [    Test worker] c.t.c.d.token.component.TokenGenerator   : [토큰 생성] UUID 토큰 : 9f61408e-3afb-333e-90cd-f1b20de6f466, 사용자ID : 56
Hibernate: select (coalesce(max(t1_0.wait_no),0)+1) from token t1_0
Hibernate: select coalesce(count(t1_0.progress_status),0) from token t1_0 where t1_0.progress_status=?
2024-04-18T23:25:01.314+09:00  INFO 4019 --- [concert] [    Test worker] c.t.c.d.token.component.TokenReader      : [getCurrentQueueStatus] 예약 진행중인 고객수 : 4
Hibernate: insert into token (created_at,expired_at,progress_status,token,updated_at,user_id,wait_no) values (?,?,?,?,?,?,?)
Hibernate: update user set point=?,token=? where user_id=?
Hibernate: select t1_0.token_id,t1_0.created_at,t1_0.expired_at,t1_0.progress_status,t1_0.token,t1_0.updated_at,t1_0.user_id,t1_0.wait_no from token t1_0 where t1_0.token=?
Hibernate: select u1_0.user_id,u1_0.point,u1_0.token from user u1_0 where u1_0.user_id=?
Hibernate: select t1_0.token_id,t1_0.created_at,t1_0.expired_at,t1_0.progress_status,t1_0.token,t1_0.updated_at,u1_0.user_id,u1_0.point,u1_0.token,t1_0.wait_no from token t1_0 left join user u1_0 on u1_0.user_id=t1_0.user_id where t1_0.token_id=?
Hibernate: update token set created_at=?,expired_at=?,progress_status=?,token=?,updated_at=?,user_id=?,wait_no=? where token_id=?
Hibernate: select t1_0.token_id,t1_0.created_at,t1_0.expired_at,t1_0.progress_status,t1_0.token,t1_0.updated_at,t1_0.user_id,t1_0.wait_no from token t1_0 where t1_0.token=?
Hibernate: select u1_0.user_id,u1_0.point,u1_0.token from user u1_0 where u1_0.user_id=?
Hibernate: insert into user (point,token) values (?,?)
2024-04-18T23:25:01.341+09:00  INFO 4019 --- [concert] [    Test worker] c.t.c.d.token.component.TokenGenerator   : [토큰 생성] UUID 토큰 : 72b32a1f-754b-31c0-9b36-95e0cb6cde7f, 사용자ID : 57
Hibernate: select (coalesce(max(t1_0.wait_no),0)+1) from token t1_0
Hibernate: select coalesce(count(t1_0.progress_status),0) from token t1_0 where t1_0.progress_status=?
2024-04-18T23:25:01.344+09:00  INFO 4019 --- [concert] [    Test worker] c.t.c.d.token.component.TokenReader      : [getCurrentQueueStatus] 예약 진행중인 고객수 : 5
Hibernate: insert into token (created_at,expired_at,progress_status,token,updated_at,user_id,wait_no) values (?,?,?,?,?,?,?)
Hibernate: update user set point=?,token=? where user_id=?
Hibernate: select t1_0.token_id,t1_0.created_at,t1_0.expired_at,t1_0.progress_status,t1_0.token,t1_0.updated_at,t1_0.user_id,t1_0.wait_no from token t1_0 where t1_0.token=?
Hibernate: select u1_0.user_id,u1_0.point,u1_0.token from user u1_0 where u1_0.user_id=?
Hibernate: select t1_0.token_id,t1_0.created_at,t1_0.expired_at,t1_0.progress_status,t1_0.token,t1_0.updated_at,u1_0.user_id,u1_0.point,u1_0.token,t1_0.wait_no from token t1_0 left join user u1_0 on u1_0.user_id=t1_0.user_id where t1_0.token_id=?
Hibernate: update token set created_at=?,expired_at=?,progress_status=?,token=?,updated_at=?,user_id=?,wait_no=? where token_id=?
Hibernate: select t1_0.token_id,t1_0.created_at,t1_0.expired_at,t1_0.progress_status,t1_0.token,t1_0.updated_at,t1_0.user_id,t1_0.wait_no from token t1_0 where t1_0.token=?
Hibernate: select u1_0.user_id,u1_0.point,u1_0.token from user u1_0 where u1_0.user_id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
