<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.tdd.concert.api.usecase.ReserveSeatIntegrationTest" tests="2" skipped="1" failures="0" errors="0" timestamp="2024-04-18T14:25:01" hostname="Jeongui-MacBookPro.local" time="0.053">
  <properties/>
  <testcase name="사용자가 좌석을 예약한다" classname="com.tdd.concert.api.usecase.ReserveSeatIntegrationTest" time="0.05"/>
  <testcase name="다수의 요청자가 1개의 좌석을 동시에 예약하려고 한다." classname="com.tdd.concert.api.usecase.ReserveSeatIntegrationTest" time="0.001">
    <skipped/>
  </testcase>
  <system-out><![CDATA[2024-04-18T23:25:01.894+09:00  INFO 4019 --- [concert] [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.tdd.concert.api.usecase.ReserveSeatIntegrationTest]: ReserveSeatIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-04-18T23:25:01.895+09:00  INFO 4019 --- [concert] [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.tdd.concert.ConcertApplication for test class com.tdd.concert.api.usecase.ReserveSeatIntegrationTest
Hibernate: insert into user (point,token) values (?,?)
2024-04-18T23:25:01.902+09:00  INFO 4019 --- [concert] [    Test worker] c.t.c.d.token.component.TokenGenerator   : [토큰 생성] UUID 토큰 : e2c420d9-28d4-3f8c-a0ff-2ec19b371514, 사용자ID : 71
Hibernate: select (coalesce(max(t1_0.wait_no),0)+1) from token t1_0
Hibernate: select coalesce(count(t1_0.progress_status),0) from token t1_0 where t1_0.progress_status=?
2024-04-18T23:25:01.905+09:00  INFO 4019 --- [concert] [    Test worker] c.t.c.d.token.component.TokenReader      : [getCurrentQueueStatus] 예약 진행중인 고객수 : 5
Hibernate: insert into token (created_at,expired_at,progress_status,token,updated_at,user_id,wait_no) values (?,?,?,?,?,?,?)
Hibernate: update user set point=?,token=? where user_id=?
Hibernate: select u1_0.user_id,u1_0.point,u1_0.token from user u1_0 where u1_0.user_id=?
Hibernate: insert into concert (name,singer) values (?,?)
Hibernate: insert into concert_schedule (concert_id,concert_date) values (?,?)
Hibernate: insert into seat (concert_id,concert_schedule_id,price,seat_no,seat_status,temp_reserved_expired_at,temp_reserved_user_id) values (?,?,?,?,?,?,?)
Hibernate: select u1_0.user_id,u1_0.point,u1_0.token from user u1_0 where u1_0.user_id=?
Hibernate: update user set point=?,token=? where user_id=?
2024-04-18T23:25:01.924+09:00  INFO 4019 --- [concert] [    Test worker] c.t.c.api.usecase.ReserveSeatUseCase     : [ReserveSeatUseCase] 예약 시작
Hibernate: select u1_0.user_id,u1_0.point,u1_0.token from user u1_0 where u1_0.user_id=?
2024-04-18T23:25:01.927+09:00  INFO 4019 --- [concert] [    Test worker] c.t.c.api.usecase.ReserveSeatUseCase     : [ReserveSeatUseCase] 사용자 검증 완료
Hibernate: select c1_0.concert_id,c1_0.name,c1_0.singer from concert c1_0 where c1_0.concert_id=?
2024-04-18T23:25:01.930+09:00  INFO 4019 --- [concert] [    Test worker] c.t.c.api.usecase.ReserveSeatUseCase     : [ReserveSeatUseCase] 콘서트 조회완료
Hibernate: select s1_0.seat_id,s1_0.concert_id,s1_0.concert_schedule_id,s1_0.price,s1_0.seat_no,s1_0.seat_status,s1_0.temp_reserved_expired_at,s1_0.temp_reserved_user_id from seat s1_0 join concert_schedule cs1_0 on cs1_0.concert_schedule_id=s1_0.concert_schedule_id where s1_0.seat_no=? and s1_0.concert_id=? and cs1_0.concert_date=? for update
Hibernate: select c1_0.concert_id,c1_0.name,c1_0.singer from concert c1_0 where c1_0.concert_id=?
Hibernate: select cs1_0.concert_schedule_id,c1_0.concert_id,c1_0.name,c1_0.singer,cs1_0.concert_date from concert_schedule cs1_0 left join concert c1_0 on c1_0.concert_id=cs1_0.concert_id where cs1_0.concert_schedule_id=?
Hibernate: update seat set concert_id=?,concert_schedule_id=?,price=?,seat_no=?,seat_status=?,temp_reserved_expired_at=?,temp_reserved_user_id=? where seat_id=?
2024-04-18T23:25:01.938+09:00  INFO 4019 --- [concert] [    Test worker] c.t.c.api.usecase.ReserveSeatUseCase     : [ReserveSeatUseCase] 좌석 Occupy 완료
2024-04-18T23:25:01.939+09:00  INFO 4019 --- [concert] [    Test worker] c.t.c.d.r.c.ReservationValidator         : [ReservationValidator] validate 메서드 시작
Hibernate: select u1_0.user_id,u1_0.point,u1_0.token from user u1_0 where u1_0.user_id=?
Hibernate: select t1_0.token_id,t1_0.created_at,t1_0.expired_at,t1_0.progress_status,t1_0.token,t1_0.updated_at,t1_0.user_id,t1_0.wait_no from token t1_0 where t1_0.token=?
Hibernate: select c1_0.concert_id,c1_0.name,c1_0.singer from concert c1_0 where c1_0.concert_id=?
Hibernate: insert into reservation (concert_id,reservation_date,reservation_status,seat_id,user_id) values (?,?,?,?,?)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
